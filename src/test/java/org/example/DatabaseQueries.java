package org.example;


public class DatabaseQueries {

    // === CREATE TABLE QUERIES ===
    public static final String CREATE_TABLE_UZYTKOWNIK =
            "CREATE TABLE UZYTKOWNIK (" +
                    "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "imie VARCHAR2(50), " +
                    "nazwisko VARCHAR2(50), " +
                    "login VARCHAR2(50) UNIQUE, " +
                    "haslo VARCHAR2(100), " +
                    "rola VARCHAR2(20)" +
                    ")";

    public static final String CREATE_TABLE_POJAZDY =
            "CREATE TABLE POJAZDY (" +
                    "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "marka VARCHAR2(50), " +
                    "model VARCHAR2(50), " +
                    "rejestracja VARCHAR2(20), " +
                    "status VARCHAR2(20), " +
                    "uwagi VARCHAR2(500), " +
                    "kierowca_id NUMBER" +
                    ")";

    public static final String CREATE_TABLE_ZLECENIA =
            "CREATE TABLE ZLECENIA (" +
                    "id_zlecenia NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "nadawca_id NUMBER, " +
                    "odbiorca VARCHAR2(100), " +
                    "adres VARCHAR2(200), " +
                    "miasto VARCHAR2(50), " +
                    "kod_pocztowy VARCHAR2(10), " +
                    "opis VARCHAR2(500), " +
                    "waga NUMBER(10,2), " +
                    "data_nadania DATE, " +
                    "status VARCHAR2(50), " +
                    "pojazd_id NUMBER, " +
                    "kierowca_id NUMBER" +
                    ")";

    public static final String CREATE_TABLE_INCYDENTY =
            "CREATE TABLE INCYDENTY (" +
                    "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "typ_incydentu VARCHAR2(100), " +
                    "lokalizacja VARCHAR2(200), " +
                    "opis_incydentu VARCHAR2(1000), " +
                    "data_zgloszenia TIMESTAMP, " +
                    "status VARCHAR2(20)" +
                    ")";

    public static final String CREATE_TABLE_RAPORTY_TRAS =
            "CREATE TABLE RAPORTY_TRAS (" +
                    "id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, " +
                    "kilometry NUMBER, " +
                    "spalanie NUMBER(5,2), " +
                    "raport VARCHAR2(1000), " +
                    "data_zakonczenia TIMESTAMP" +
                    ")";

    // === DROP TABLE QUERIES ===
    public static final String DROP_TABLE_TEMPLATE = "DROP TABLE %s CASCADE CONSTRAINTS";

    // === CHECK TABLE EXISTS ===
    public static final String CHECK_TABLE_EXISTS =
            "SELECT COUNT(*) FROM USER_TABLES WHERE table_name = ?";

    // === INSERT QUERIES ===
    public static final String INSERT_UZYTKOWNIK =
            "INSERT INTO UZYTKOWNIK (id, imie, nazwisko, login, haslo, rola) VALUES (DEFAULT, ?, ?, ?, ?, ?)";

    public static final String INSERT_POJAZDY =
            "INSERT INTO POJAZDY (id, marka, model, rejestracja, status, uwagi, kierowca_id) VALUES (DEFAULT, ?, ?, ?, ?, ?, ?)";

    public static final String INSERT_ZLECENIA =
            "INSERT INTO ZLECENIA (id_zlecenia, nadawca_id, odbiorca, adres, miasto, kod_pocztowy, opis, waga, data_nadania, status) " +
                    "VALUES (DEFAULT, ?, ?, ?, ?, ?, ?, ?, SYSDATE, ?)";

    public static final String INSERT_ZLECENIA_SIMPLE =
            "INSERT INTO ZLECENIA (id_zlecenia, nadawca_id, odbiorca, status) VALUES (DEFAULT, ?, ?, ?)";

    // === SELECT QUERIES ===
    public static final String SELECT_USER_BY_LOGIN_PASSWORD =
            "SELECT id, imie, nazwisko, rola FROM UZYTKOWNIK WHERE login = ? AND haslo = ?";

    public static final String SELECT_USER_BY_LOGIN =
            "SELECT id, imie, nazwisko, rola FROM UZYTKOWNIK WHERE login = ?";

    public static final String SELECT_ALL_USERS =
            "SELECT id, imie, nazwisko, login, rola FROM UZYTKOWNIK";

    public static final String SELECT_USER_COUNT =
            "SELECT COUNT(*) FROM UZYTKOWNIK";

    public static final String SELECT_USER_COUNT_BY_ROLE =
            "SELECT COUNT(*) FROM UZYTKOWNIK WHERE rola = ?";

    public static final String SELECT_POJAZDY_COUNT =
            "SELECT COUNT(*) FROM POJAZDY";

    public static final String SELECT_POJAZDY_BY_STATUS =
            "SELECT id, marka, model, rejestracja FROM POJAZDY WHERE status = ?";

    public static final String SELECT_ZLECENIE_BY_ID =
            "SELECT id_zlecenia, nadawca_id, odbiorca, status FROM ZLECENIA WHERE id_zlecenia = ?";

    public static final String SELECT_ZLECENIA_COUNT =
            "SELECT COUNT(*) FROM ZLECENIA";

    public static final String SELECT_ZLECENIA_BY_STATUS =
            "SELECT COUNT(*) FROM ZLECENIA WHERE status = ?";

    public static final String SELECT_LAST_ZLECENIE_ID =
            "SELECT id_zlecenia FROM ZLECENIA WHERE odbiorca = ? AND ROWNUM = 1";

    // === UPDATE QUERIES ===
    public static final String UPDATE_ZLECENIA_STATUS =
            "UPDATE ZLECENIA SET status = ? WHERE id_zlecenia = ?";

    public static final String UPDATE_USER_ROLE =
            "UPDATE UZYTKOWNIK SET rola = ? WHERE login = ?";

    public static final String UPDATE_POJAZD_STATUS =
            "UPDATE POJAZDY SET status = ? WHERE id = ?";

    // === DELETE QUERIES ===
    public static final String DELETE_USER_BY_LOGIN =
            "DELETE FROM UZYTKOWNIK WHERE login = ?";

    public static final String DELETE_ZLECENIE_BY_ID =
            "DELETE FROM ZLECENIA WHERE id_zlecenia = ?";

    // === COMPLEX QUERIES ===
    public static final String SELECT_USER_WITH_VEHICLE =
            "SELECT u.imie, u.nazwisko, p.marka, p.model " +
                    "FROM UZYTKOWNIK u " +
                    "LEFT JOIN POJAZDY p ON u.id = p.kierowca_id " +
                    "WHERE u.rola = ?";

    public static final String SELECT_ZLECENIA_WITH_USER =
            "SELECT z.id_zlecenia, z.odbiorca, z.status, u.imie, u.nazwisko " +
                    "FROM ZLECENIA z " +
                    "JOIN UZYTKOWNIK u ON z.nadawca_id = u.id " +
                    "WHERE z.status = ?";

    // === UTILITY QUERIES ===
    public static final String SELECT_CURRENT_USER =
            "SELECT USER FROM DUAL";

    public static final String SELECT_SYSDATE =
            "SELECT SYSDATE FROM DUAL";

    public static final String SELECT_TABLE_COUNT =
            "SELECT COUNT(*) FROM USER_TABLES WHERE table_name IN ('UZYTKOWNIK', 'POJAZDY', 'ZLECENIA', 'INCYDENTY', 'RAPORTY_TRAS')";

    // === TABLE NAMES (for dynamic operations) ===
    public static final String[] ALL_TABLES = {
            "ZLECENIA", "RAPORTY_TRAS", "INCYDENTY", "POJAZDY", "UZYTKOWNIK"
    }; // Kolejność ważna dla DROP (foreign keys)

    public static final String[] CORE_TABLES = {
            "UZYTKOWNIK", "POJAZDY", "ZLECENIA"
    };

    // === Helper methods ===
    public static String getDropTableQuery(String tableName) {
        return String.format(DROP_TABLE_TEMPLATE, tableName);
    }

    // Status messages for zlecenia
    public static String getStatusMessage(String status) {
        switch (status) {
            case "Przyjęte":
                return "Towar został przyjęty do magazynu";
            case "Gotowe do wysyłki":
                return "Paczka jest gotowa do wysyłki";
            case "W drodze":
                return "Paczka jest w drodze";
            case "Oczekiwanie na odbiór":
                return "Paczka oczekuje na odbiór";
            case "Zrealizowane":
                return "Przesyłka została zrealizowana";
            default:
                return "Status został zaktualizowany";
        }
    }
}